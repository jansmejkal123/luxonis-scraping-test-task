version: "3.9"

services:
  postgres:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env.db
    ports:
      - "5431:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 3s
      retries: 3
  cat_catalogue:
    build:
      context: .
      dockerfile: cat_catalogue/Dockerfile
    container_name: cat_catalogue
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://cat_catalogue:3210"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "3210:3210"
    networks:
      - app-network
  cron:
    build:
      context: ./cron
      dockerfile: Dockerfile
    container_name: cron
    image: cron
    restart: always
    env_file:
      - .env.db
      - .env.cron
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      cat_catalogue:
        condition: service_healthy
    networks:
      - app-network
  browser:
    build:
      context: .
      dockerfile: ./browser/Dockerfile
    container_name: browser

    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "8080:3000"
networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
